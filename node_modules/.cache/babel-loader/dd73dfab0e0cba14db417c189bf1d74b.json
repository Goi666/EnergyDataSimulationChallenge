{"ast":null,"code":"var _jsxFileName = \"/front/src/Home/App.jsx\";\nimport React, { Component } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport axiosbase from 'axios';\nconst axios = axiosbase.create({\n  baseURL: 'http://localhost:3000',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  responseType: 'json'\n});\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: []\n    };\n  }\n\n  componentDidMount() {\n    // const url = \"http://localhost:3000/\";\n    // axios.get(url, {\n    //   headers: {\n    //     \"Access-Control-Allow-Origin\": \"*\",\n    //     \"Access-Control-Allow-Methods\": \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\n    //     \"Access-Control-Allow-Headers\": \"Origin, Content-Type, X-Auth-Token\"\n    //   }\n    // })\n    axios.get('/').then(res => {\n      console.log(res.data);\n      this.setState({\n        data: res.data\n      });\n    }).catch(err => {\n      console.log(err); // 失敗\n    });\n  }\n\n  render() {\n    const chartdata = [{\n      Oxford: this.state.data.energy_production[0]\n    }, {\n      Oxford: this.state.data.energy_production[1]\n    }, {\n      Oxford: this.state.data.energy_production[2]\n    }]; // const data = [\n    //   {\n    //     name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n    //   },\n    //   {\n    //     name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n    //   },\n    //   {\n    //     name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n    //   },\n    //   {\n    //     name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n    //   },\n    //   {\n    //     name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n    //   },\n    //   {\n    //     name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n    //   },\n    //   {\n    //     name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n    //   },\n    // ];\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      width: 500,\n      height: 300,\n      data: chartdata,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Oxford\",\n      stroke: \"#8884d8\",\n      activeDot: {\n        r: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Combridge\",\n      stroke: \"#82ca9d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"London\",\n      stroke: \"#82ca9d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/front/src/Home/App.jsx"],"names":["React","Component","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","axiosbase","axios","create","baseURL","headers","responseType","Home","constructor","props","state","lists","componentDidMount","get","then","res","console","log","data","setState","catch","err","render","chartdata","Oxford","energy_production","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport axiosbase from 'axios';\n\nconst axios = axiosbase.create({\n  baseURL: 'http://localhost:3000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  responseType: 'json',\n})\n\n\nclass Home extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      lists: []\n    };\n  }\n  \n  componentDidMount() {\n    // const url = \"http://localhost:3000/\";\n    // axios.get(url, {\n    //   headers: {\n    //     \"Access-Control-Allow-Origin\": \"*\",\n    //     \"Access-Control-Allow-Methods\": \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\n    //     \"Access-Control-Allow-Headers\": \"Origin, Content-Type, X-Auth-Token\"\n    //   }\n    // })\n    axios\n    .get('/')\n    .then((res) => {\n      console.log(res.data);\n      this.setState({ data: res.data });\n    })\n    .catch((err) => {\n      console.log(err) // 失敗\n    });\n  }\n\n  render () {\n    const chartdata = [\n      {\n        Oxford: this.state.data.energy_production[0]\n      },\n      {\n        Oxford: this.state.data.energy_production[1]\n      },\n      {\n        Oxford: this.state.data.energy_production[2]\n      },\n    ];\n    // const data = [\n    //   {\n    //     name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n    //   },\n    //   {\n    //     name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n    //   },\n    //   {\n    //     name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n    //   },\n    //   {\n    //     name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n    //   },\n    //   {\n    //     name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n    //   },\n    //   {\n    //     name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n    //   },\n    //   {\n    //     name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n    //   },\n    // ];\n\n    return (\n      <div>\n      <LineChart\n        width={500}\n        height={300}\n        data={chartdata}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        {/* <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" /> */}\n        <Line type=\"monotone\" dataKey=\"Oxford\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n        <Line type=\"monotone\" dataKey=\"Combridge\" stroke=\"#82ca9d\" />\n        <Line type=\"monotone\" dataKey=\"London\" stroke=\"#82ca9d\" />\n      </LineChart>\n      </div>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}